# Read `man 5 sway` for a complete reference.
#
include ~/.config/sway/config.host

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show



input type:keyboard {
    xkb_layout us,ru,ua
    xkb_options grp:win_space_toggle,caps:escape,compose:ralt

    repeat_delay 300
    repeat_rate 60
}

seat * hide_cursor 10000

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec wlogout
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace 1
    bindsym --to-code $mod+2 workspace 2
    bindsym --to-code $mod+3 workspace 3
    bindsym --to-code $mod+4 workspace 4
    bindsym --to-code $mod+5 workspace 5
    bindsym --to-code $mod+6 workspace 6
    bindsym --to-code $mod+7 workspace 7
    bindsym --to-code $mod+8 workspace 8
    bindsym --to-code $mod+9 workspace 9
    bindsym --to-code $mod+0 workspace 10
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace 1
    bindsym --to-code $mod+Shift+2 move container to workspace 2
    bindsym --to-code $mod+Shift+3 move container to workspace 3
    bindsym --to-code $mod+Shift+4 move container to workspace 4
    bindsym --to-code $mod+Shift+5 move container to workspace 5
    bindsym --to-code $mod+Shift+6 move container to workspace 6
    bindsym --to-code $mod+Shift+7 move container to workspace 7
    bindsym --to-code $mod+Shift+8 move container to workspace 8
    bindsym --to-code $mod+Shift+9 move container to workspace 9
    bindsym --to-code $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+s floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+s focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
    bindsym --to-code $mod+z focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 20px
    bindsym --to-code $down resize grow height 20px
    bindsym --to-code $up resize shrink height 20px
    bindsym --to-code $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 20px
    bindsym --to-code Down resize grow height 20px
    bindsym --to-code Up resize shrink height 20px
    bindsym --to-code Right resize grow width 20px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"
#
#bindsym $mod+ctrl+$left resize shrink width 20px
#bindsym $mod+ctrl+$right resize grow width 20px
#bindsym $mod+ctrl+$up resize shrink height 20px
#bindsym $mod+ctrl+$down resize grow height 20px

exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob
bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+ | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec amixer sset Master 5%- | sed -En 's/.*\[([0-9]+)%\].*/\1/p' | head -1 > $SWAYSOCK.wob
bindsym XF86AudioMute exec amixer sset Master toggle | sed -En '/\[on\]/ s/.*\[([0-9]+)%\].*/\1/ p; /\[off\]/ s/.*/0/p' | head -1 > $SWAYSOCK.wob

bindsym --to-code $mod+grave exec toggle-mute.sh

bindsym $mod+F1 exec playerctl play-pause 
bindsym $mod+F2 exec playerctl previous
bindsym $mod+F3 exec playerctl next 


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    #position top

    ## When the status_command prints a new line to stdout, swaybar updates.
    ## The default just shows the current date and time.
    #status_command ~/.local/bin/status.py

    #font pango:Source Code Pro 11

}


exec_always import-gsettings \
    gtk-theme:gtk-theme-name \
    icon-theme:gtk-icon-theme-name \
    cursor-theme:gtk-cursor-theme-name

include /etc/sway/config.d/*

exec swayidle -w \
        timeout 600 'swaymsg "output * dpms off"' \
                resume 'swaymsg "output * dpms on"' \
        timeout 900 'swaylock -f -c 000000' \
        before-sleep 'swaylock -f -c 000000'

bindsym --to-code Ctrl+Mod1+L exec swaylock -f -c 000000 && swayidle timeout 1 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"; pkill -n swayidle'

for_window [app_id="org.kde.kdeconnect-indicator"] floating enable


#gaps inner 5
default_border pixel 2
smart_gaps on
smart_borders on
focus_follows_mouse no

bindsym --to-code $mod+o exec alacritty -e ranger
bindsym --to-code $mod+n exec alacritty -e ncmpcpp
bindsym --to-code $mod+i exec firefox
bindsym --to-code $mod+p exec flatpak run com.discordapp.Discord
bindsym $mod+comma exec dolphin ~/
bindsym $mod+apostrophe exec clipman pick -t rofi

bindsym --to-code Ctrl+Print exec grim -g "$(slurp)" - | wl-copy
bindsym --to-code $mod+Print exec grim ~/Pictures/Screenshots/$(date +'%F_%H:%M.png')
bindsym --to-code Print exec grim - | wl-copy

exec mako
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec kdeconnect-indicator
exec gammastep
#exec polychromatic-tray-applet
#
exec flatpak run org.telegram.desktop -autostart
